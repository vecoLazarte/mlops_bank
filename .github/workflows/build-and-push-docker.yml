name: Build and Push Docker to ECR

on:
  push:
    branches:
      - feature/aws

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Python setup
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install -r operation/batch_training/requirements.txt

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.SECRET_KEY }}
          aws-region: us-east-2

      - name: Login to ECR
        run: aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin ${{ secrets.ECR_URL }}
      - name: Create ECR repository if it doesn't exist
        run: |
          REPO_NAME="${{ github.actor }}/batch-training"
          EXISTING_REPO=$(aws ecr describe-repositories --repository-name "$REPO_NAME" 2>&1 || echo "NOT_FOUND")
          if [[ "$EXISTING_REPO" == *"RepositoryNotFoundException"* ]]; then
            echo "Repository does not exist. Creating..."
            aws ecr create-repository --repository-name "$REPO_NAME"
          else
            echo "Repository exists."
          fi
      - name: Build image
        run: docker build -t "${{ github.actor }}/batch-training" operation/batch_training
      - name: Tag image
        run: docker tag "${{ github.actor }}/batch-training:latest" "${{ secrets.ECR_URL }}/${{ github.actor }}/batch-training:latest"
      - name: Push image
        run: docker push "${{ secrets.ECR_URL }}/${{ github.actor }}/batch-training:latest"
